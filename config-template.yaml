config:
  BinderHub:
    use_registry: true
    image_prefix: <docker-org>/<prefix>-
    hub_url: http://<jupyter-ip>
    auth_enabled: true

jupyterhub:
  cull:
    # don't cull authenticated users
    users: False

  hub:
    services:
      binder:
        oauth_redirect_uri: "http://<binderhub_ip>/oauth_callback"
        oauth_client_id: "binder-oauth-client-test"
    extraConfig:
      hub_extra: |
        c.JupyterHub.redirect_to_server = False

      binder: |
        from kubespawner import KubeSpawner

        class BinderSpawner(KubeSpawner):
          def start(self):
              if 'image' in self.user_options:
                # binder service sets the image spec via user options
                self.image = self.user_options['image']
              return super().start()
        c.JupyterHub.spawner_class = BinderSpawner

  singleuser:
    # to make notebook servers aware of hub
    cmd: jupyterhub-singleuser

  auth:
    type: github
      github:
        clientId: "<clientId>"
        clientSecret: "<clientSecret>"
        callbackUrl: "http://<jupyterhub_ip>/hub/oauth_callback"
        orgWhitelist:
          - "binderhub-test-org"
      scopes:
        - "read:user"
