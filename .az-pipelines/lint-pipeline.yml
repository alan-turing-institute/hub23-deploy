trigger:
- main

pr:
- main

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: LintAndValidateHelmChart
  steps:
  - task: HelmInstaller@1
    displayName: 'Stage 1 Step 1: Install helm'
    inputs:
      helmVersionToInstall: '3.5.2'

  - task: UsePythonVersion@0
    displayName: 'Stage 1 Step 2: Install Python 3.8'
    inputs:
      versionSpec: '3.8'
      addToPath: true

  - script: python -m pip install --upgrade pip setuptools wheel
    displayName: 'Stage 1 Step 3: Install Python tools'

  - script: python -m pip install yamllint
    displayName: 'Stage 1 Step 4: Install yamllint'

  - task: Bash@3
    displayName: 'Stage 1 Step 5: Install kubeval'
    inputs:
      targetType: 'inline'
      script: |
        wget https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz
        tar xf kubeval-linux-amd64.tar.gz
        sudo cp kubeval /usr/local/bin

  - task: Bash@3
    displayName: 'Stage 2 Step 1: Add helm chart repos'
    inputs:
      targetType: 'inline'
      script: |
        helm repo add stable https://kubernetes-charts.storage.googleapis.com
        helm repo add jupyterhub https://jupyterhub.github.io/helm-chart
        helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
        helm repo update

  - task: Bash@3
    displayName: 'Stage 2 Step 2: Update local helm chart'
    inputs:
      targetType: 'inline'
      script: |
        cd hub23-chart && helm dep up && cd ..

  - task: Bash@3
    displayName: "Stage 3 Step 1: helm lint"
    inputs:
      targetType: 'inline'
      script: |
        helm lint hub23-chart -f hub23-chart/values.yaml -f deploy/prod.yaml -f tests/test-values.yaml --debug

  - task: Bash@3
    displayName: "Stage 3 Step 2: helm template"
    inputs:
      targetType: 'inline'
      script: |
        mkdir rendered_templates
        helm template hub23-chart --output-dir rendered_templates -f hub23-chart/values.yaml -f deploy/prod.yaml -f tests/test-values.yaml --debug

  - task: Bash@3
    displayName: "Stage 3 Step 3: yamllint"
    inputs:
      targetType: 'inline'
      script: |
        yamllint -c tests/yamllint-config.yaml rendered_templates

  - task: Bash@3
    displayName: "Stage 3 Step 4: kubeval"
    inputs:
      targetType: 'inline'
      script: |
        find rendered_templates -type f -name '*.yaml' -exec kubeval {} --kubernetes-version 1.18.1 --strict --ignore-missing-schemas ;
