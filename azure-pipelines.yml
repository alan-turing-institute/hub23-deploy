trigger:
  - master

pr: none

jobs:
  - job:
    pool:
      vmImage: 'ubuntu-latest'

    steps:
      # Stage 1: Installation
      - task: KubectlInstaller@0
        displayName: 'Stage 1 Step 1: Install kubectl'
        inputs:
          kubectlVersion: '1.14.8'

      - task: AzureCLI@1
        displayName: 'Stage 1 Step 2: Merge kubectl config'
        inputs:
          azureSubscription: 'hub23-deploy-scn'
          scriptLocation: 'inlineScript'
          inlineScript: 'az aks get-credentials -n hub23cluster -g Hub23'

      - task: HelmInstaller@1
        displayName: 'Stage 1 Step 3: Install helm'
        inputs:
          helmVersionToInstall: '2.15.0'

      - task: HelmDeploy@0
        displayName: 'Stage 1 Step 4: Initialise helm'
        inputs:
          connectionType: 'Azure Resource Manager'
          azureSubscription: 'hub23-deploy-scn'
          azureResourceGroup: 'Hub23'
          kubernetesCluster: 'hub23cluster'
          namespace: 'hub23'
          command: 'init'
          arguments: '--force-upgrade'
          tillerNamespace: 'kube-system'

      - task: UsePythonVersion@0
        displayName: 'Stage 1 Step 5: Install Python 3.7'
        inputs:
          versionSpec: '3.7'
          addToPath: true

      - script: python -m pip install --upgrade pip setuptools wheel
        displayName: 'Stage 1 Step 6: Install Python tools'

      - script: python -m pip install -r requirements.txt
        displayName: 'Stage 1 Step 7: Install Python requirements'

      - task: Bash@3
        displayName: 'Stage 1 Step 8: Install kubeval'
        inputs:
          targetType: 'inline'
          script: |
            wget https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz
            tar xf kubeval-linux-amd64.tar.gz
            sudo cp kubeval /usr/local/bin

      # Stage 2: Perform linting, validation and upgrade
      - task: AzureKeyVault@1
        displayName: 'Stage 2 Step 1: Pull Key Vault Secrets'
        inputs:
          azureSubscription: 'hub23-deploy-scn'
          KeyVaultName: 'hub23-keyvault'
          SecretsFilter: 'apiToken, secretToken, github-client-id, github-client-secret, SP-appID, SP-key, binderhub-access-token'

      - task: Bash@3
        displayName: 'Stage 2 Step 2: Make .secret folder'
        inputs:
          targetType: 'inline'
          script: 'mkdir -p .secret'

      - task: Bash@3
        displayName: "Stage 2 Step 3: Generate .secret/prod.yaml"
        inputs:
          targetType: 'inline'
          script: |
            sed -e "s/{binderhub_access_token}/$(binderhub-access-token)/" \
            -e "s/{username}/$(SP-appID)/" \
            -e "s/{password}/$(SP-key)/" \
            -e "s/{apiToken}/$(apiToken)/" \
            -e "s/{secretToken}/$(secretToken)/" \
            -e "s/{github_client_id}/$(github-client-id)/" \
            -e "s/{github_client_secret}/$(github-client-secret)/" \
            deploy/prod-template.yaml > .secret/prod.yaml
            cat .secret/prod.yaml

      - task: Bash@3
        displayName: 'Stage 2 Step 4: Add helm chart repos'
        inputs:
          targetType: 'inline'
          script: |
            helm repo add jupyterhub https://jupyterhub.github.io/helm-chart
            helm repo add nginx-ingress https://kubernetes-charts.storage.googleapis.com
            helm repo add cert-manager https://charts.jetstack.io
            helm repo update
            kubectl apply --validate=false -f https://raw.githubusercontent.com/jetstack/cert-manager/release-0.10/deploy/manifests/00-crds.yaml

      - task: Bash@3
        displayName: 'Stage 2 Step 5: Update local helm chart'
        inputs:
          targetType: 'inline'
          script: |
            cd hub23-chart
            helm dependency update
            cd ..

      - task: PythonScript@0
        displayName: 'Stage 2 Step 6: Lint and validate hub23-chart'
        inputs:
          scriptSource: 'filePath'
          scriptPath: 'tests/lint-and-validate.py'
          arguments: '--values ../hub23-chart/values.yaml ../deploy/prod.yaml ../.secret/prod.yaml'

      - task: HelmDeploy@0
        displayName: 'Stage 2 Step 7: Perform helm upgrade'
        inputs:
          connectionType: 'Azure Resource Manager'
          azureSubscription: 'hub23-deploy-scn'
          azureResourceGroup: 'Hub23'
          kubernetesCluster: 'hub23cluster'
          namespace: 'hub23'
          command: 'upgrade'
          chartType: 'FilePath'
          chartPath: './hub23-chart'
          releaseName: 'hub23'
          force: true
          arguments: '-f deploy/prod.yaml -f .secret/prod.yaml --timeout 600'
