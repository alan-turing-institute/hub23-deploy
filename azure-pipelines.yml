trigger:
  - master

pr: none

jobs:
  - job:
    pool:
      vmImage: 'ubuntu-latest'

    steps:
      - task: AzureKeyVault@1
        displayName: 'Pull Key Vault Secrets'
        inputs:
          azureSubscription: 'hub23-deploy-scn'
          KeyVaultName: 'hub23-keyvault'
          SecretsFilter: 'apiToken, secretToken, github-client-id, github-client-secret, SP-appID, SP-key, binderhub-access-token'

      - task: Bash@3
        displayName: 'Make .secret folder'
        inputs:
          targetType: 'inline'
          script: 'mkdir -p .secret'

      - task: Bash@3
        displayName: "Generate .secret/prod.yaml"
        inputs:
          targetType: 'inline'
          script: |
            sed -e "s/{binderhub_access_token}/$(binderhub-access-token)/" \
            -e "s/{username}/$(SP-appID)/" \
            -e "s/{password}/$(SP-key)/" \
            -e "s/{apiToken}/$(apiToken)/" \
            -e "s/{secretToken}/$(secretToken)/" \
            -e "s/{github_client_id}/$(github-client-id)/" \
            -e "s/{github_client_secret}/$(github-client-secret)/" \
            deploy/prod-template.yaml > .secret/prod.yaml
            cat .secret/prod.yaml

      - task: AzureCLI@1
        displayName: 'Merging kubectl config'
        inputs:
          azureSubscription: 'hub23-deploy-scn'
          scriptLocation: 'inlineScript'
          inlineScript: 'az aks get-credentials -n hub23cluster -g Hub23'

      - task: HelmInstaller@1
        displayName: 'Install Helm'
        inputs:
          helmVersionToInstall: '2.16.0'

      - task: HelmDeploy@0
        displayName: 'Initialise Helm'
        inputs:
          connectionType: 'Azure Resource Manager'
          azureSubscription: 'hub23-deploy-scn'
          azureResourceGroup: 'Hub23'
          kubernetesCluster: 'hub23cluster'
          namespace: 'hub23'
          command: 'init'
          arguments: '--force-upgrade'
          tillerNamespace: 'kube-system'

      - task: Bash@3
        displayName: 'Add helm chart repos'
        inputs:
          targetType: 'inline'
          script: |
            helm repo add jupyterhub https://jupyterhub.github.io/helm-chart
            helm repo add nginx-ingress https://kubernetes-charts.storage.googleapis.com
            helm repo add cert-manager https://charts.jetstack.io
            helm repo update
            kubectl apply -f https://raw.githubusercontent.com/jetstack/cert-manager/release-0.10/deploy/manifests/00-crds.yaml

      - task: Bash@3
        displayName: 'Updating local chart'
        inputs:
          targetType: 'inline'
          script: |
            cd hub23-chart
            helm dependency update
            cd ..

      - task: UsePythonVersion@0
        displayName: 'Use Python v3.7'
        inputs:
          versionSpec: '3.7'
          addToPath: true
          architecture: 'x64'

      - task: PythonScript@0
        displayName: 'pip install requirements'
        inputs:
          scriptSource: 'inline'
          script: 'python -m pip install -r requirements.txt'

      - task: Bash@3
        displayName: 'Install kubeval'
        inputs:
          targetType: 'inline'
          script: |
            LATEST=$(curl --silent "https://api.github.com/repos/garethr/kubeval/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
            wget https://github.com/garethr/kubeval/releases/download/$LATEST/kubeval-linux-amd64.tar.gz
            tar -xf kubeval-darwin-amd64.tar.gz
            mv kubeval /usr/local/bin

      - task: PythonScript@0
        displayName: 'Lint and Validate hub23-chart'
        inputs:
          scriptSource: 'filePath'
          scriptPath: 'tests/lint-and-validate.py'
          arguments: '--values hub23-chart/values.yaml deploy/prod.yaml .secret/prod.yaml'

      - task: HelmDeploy@0
        displayName: 'Perform helm upgrade'
        inputs:
          connectionType: 'Azure Resource Manager'
          azureSubscription: 'hub23-deploy-scn'
          azureResourceGroup: 'Hub23'
          kubernetesCluster: 'hub23cluster'
          namespace: 'hub23'
          command: 'upgrade'
          chartType: 'FilePath'
          chartPath: './hub23-chart'
          releaseName: 'hub23'
          force: true
          arguments: '-f deploy/prod.yaml -f .secret/prod.yaml --timeout 600'
